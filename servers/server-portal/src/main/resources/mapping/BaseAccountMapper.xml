<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.open.gateway.portal.persistence.mapper.BaseAccountMapper">
	<resultMap id="BaseResultMap" type="org.open.gateway.portal.persistence.po.BaseAccount">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="account" jdbcType="VARCHAR" property="account"/>
		<result column="password" jdbcType="VARCHAR" property="password"/>
		<result column="salt" jdbcType="CHAR" property="salt"/>
		<result column="register_ip" jdbcType="VARCHAR" property="registerIp"/>
		<result column="status" jdbcType="TINYINT" property="status"/>
		<result column="phone" jdbcType="VARCHAR" property="phone"/>
		<result column="email" jdbcType="VARCHAR" property="email"/>
		<result column="desc" jdbcType="VARCHAR" property="desc"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="create_person" jdbcType="VARCHAR" property="createPerson"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
		<result column="update_person" jdbcType="VARCHAR" property="updatePerson"/>
		<result column="is_del" jdbcType="TINYINT" property="isDel"/>
	</resultMap>
	<sql id="Base_Column_List">
		id, account, password, salt, register_ip, status, phone, email, desc, create_time,
		create_person, update_time, update_person, is_del
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from base_account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<insert id="insert" parameterType="org.open.gateway.portal.persistence.po.BaseAccount">
		insert into base_account (id, account, password,
		salt, register_ip, status,
		phone, email, desc,
		create_time, create_person, update_time,
		update_person, is_del)
		values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{salt,jdbcType=CHAR}, #{registerIp,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
		#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{createPerson,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
		#{updatePerson,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="org.open.gateway.portal.persistence.po.BaseAccount">
		insert into base_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="registerIp != null">
				register_ip,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="desc != null">
				desc,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createPerson != null">
				create_person,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updatePerson != null">
				update_person,
			</if>
			<if test="isDel != null">
				is_del,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=CHAR},
			</if>
			<if test="registerIp != null">
				#{registerIp,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				#{desc,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPerson != null">
				#{createPerson,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePerson != null">
				#{updatePerson,jdbcType=VARCHAR},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.open.gateway.portal.persistence.po.BaseAccount">
		update base_account
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=CHAR},
			</if>
			<if test="registerIp != null">
				register_ip = #{registerIp,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				desc = #{desc,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPerson != null">
				create_person = #{createPerson,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePerson != null">
				update_person = #{updatePerson,jdbcType=VARCHAR},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.open.gateway.portal.persistence.po.BaseAccount">
		update base_account
		set account = #{account,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=CHAR},
		register_ip = #{registerIp,jdbcType=VARCHAR},
		status = #{status,jdbcType=TINYINT},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		desc = #{desc,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_person = #{createPerson,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		update_person = #{updatePerson,jdbcType=VARCHAR},
		is_del = #{isDel,jdbcType=TINYINT}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>