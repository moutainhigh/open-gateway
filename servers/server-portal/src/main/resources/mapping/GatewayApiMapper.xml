<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.open.gateway.portal.persistence.mapper.GatewayApiMapperExt">
	<resultMap id="BaseResultMap" type="org.open.gateway.portal.persistence.po.GatewayApi">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="api_code" jdbcType="VARCHAR" property="apiCode"/>
		<result column="api_name" jdbcType="VARCHAR" property="apiName"/>
		<result column="api_path" jdbcType="VARCHAR" property="apiPath"/>
		<result column="route_code" jdbcType="VARCHAR" property="routeCode"/>
		<result column="is_auth" jdbcType="TINYINT" property="isAuth"/>
		<result column="retry_times" jdbcType="TINYINT" property="retryTimes"/>
		<result column="status" jdbcType="TINYINT" property="status"/>
		<result column="note" jdbcType="VARCHAR" property="note"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="create_person" jdbcType="VARCHAR" property="createPerson"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
		<result column="update_person" jdbcType="VARCHAR" property="updatePerson"/>
	</resultMap>
	<sql id="Base_Column_List">
    id, api_code, api_name, api_path, route_code, is_auth, retry_times, status, note, 
    create_time, create_person, update_time, update_person
  </sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from gateway_api
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gateway_api
    where id = #{id,jdbcType=INTEGER}
  </delete>
	<insert id="insert" keyColumn="id" keyProperty="id"
			parameterType="org.open.gateway.portal.persistence.po.GatewayApi" useGeneratedKeys="true">
    insert into gateway_api (api_code, api_name, api_path, 
      route_code, is_auth, retry_times, 
      status, note, create_time, 
      create_person, update_time, update_person
      )
    values (#{apiCode,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, #{apiPath,jdbcType=VARCHAR}, 
      #{routeCode,jdbcType=VARCHAR}, #{isAuth,jdbcType=TINYINT}, #{retryTimes,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createPerson,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}
      )
  </insert>
	<insert id="insertSelective" keyColumn="id" keyProperty="id"
			parameterType="org.open.gateway.portal.persistence.po.GatewayApi" useGeneratedKeys="true">
		insert into gateway_api
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="apiCode != null">
				api_code,
			</if>
			<if test="apiName != null">
				api_name,
			</if>
			<if test="apiPath != null">
				api_path,
			</if>
			<if test="routeCode != null">
				route_code,
			</if>
			<if test="isAuth != null">
				is_auth,
			</if>
			<if test="retryTimes != null">
				retry_times,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createPerson != null">
				create_person,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updatePerson != null">
				update_person,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="apiCode != null">
				#{apiCode,jdbcType=VARCHAR},
			</if>
			<if test="apiName != null">
				#{apiName,jdbcType=VARCHAR},
			</if>
			<if test="apiPath != null">
				#{apiPath,jdbcType=VARCHAR},
			</if>
			<if test="routeCode != null">
				#{routeCode,jdbcType=VARCHAR},
			</if>
			<if test="isAuth != null">
				#{isAuth,jdbcType=TINYINT},
			</if>
			<if test="retryTimes != null">
				#{retryTimes,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPerson != null">
				#{createPerson,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePerson != null">
				#{updatePerson,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.open.gateway.portal.persistence.po.GatewayApi">
		update gateway_api
		<set>
			<if test="apiCode != null">
				api_code = #{apiCode,jdbcType=VARCHAR},
			</if>
			<if test="apiName != null">
				api_name = #{apiName,jdbcType=VARCHAR},
			</if>
			<if test="apiPath != null">
				api_path = #{apiPath,jdbcType=VARCHAR},
			</if>
			<if test="routeCode != null">
				route_code = #{routeCode,jdbcType=VARCHAR},
			</if>
			<if test="isAuth != null">
				is_auth = #{isAuth,jdbcType=TINYINT},
			</if>
			<if test="retryTimes != null">
				retry_times = #{retryTimes,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPerson != null">
				create_person = #{createPerson,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatePerson != null">
				update_person = #{updatePerson,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.open.gateway.portal.persistence.po.GatewayApi">
    update gateway_api
    set api_code = #{apiCode,jdbcType=VARCHAR},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_path = #{apiPath,jdbcType=VARCHAR},
      route_code = #{routeCode,jdbcType=VARCHAR},
      is_auth = #{isAuth,jdbcType=TINYINT},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>